#!/usr/bin/perl

use AnyEvent;
use AnyEvent::Handle;

my $cv = AE::cv;

my @commands = (
  {
    name => "connections",
    command => q/scalar map {$_->connected_ircs} $::catlady->all_cats/,
    label => "irc connections",
    draw => "LINE2",
  },
  {
    name => "channels",
    command => q/scalar grep {$_->is_channel} map {$_->windows} $::catlady->all_cats/,
    label => "irc channels",
    draw => "LINE2",
  },
);

if ($ARGV[0] and $ARGV[0] eq "config") {
  print "graph_category catlady\n";
  print "graph_title Catlady irc stats\n";
  print "graph_args -l 0\n";

  for my $command (@commands) {
    print "$command->{name}.label $command->{label}\n";
    print "$command->{name}.draw $command->{draw}\n";
    print "$command->{name}.min 0\n";
  }
  exit 0;
}

my @lines;

my $h = AnyEvent::Handle->new(
  fh => $fh,
  connect => ["unix/","/home/leedo/src/catlady/var/shell.sock"],
  on_connect => sub {
    my $h = shift;
    $h->push_read(regex => qr/^>/m, sub {
      for my $command (@commands) {
        $cv->begin;
        $h->push_write("$command->{command}\n");
        $h->push_read(regex => qr/^>/m, sub {
          my ($value) = $_[1] =~ /(\d+)/;
          if ($value < 1000) {
            push @lines, "$command->{name}.value $value";
          }
          $cv->end;
        });
      }
    });
  }
);

$cv->recv;
print join "\n", @lines;
print "\n";
